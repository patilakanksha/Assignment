@model Assignment.Models.Hotel

@{
    ViewBag.Title = "Add";
}

<h2>Add</h2>


<div class="container">
    <h2 class="text-center mt-5 mb-4">Add Hotel</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Hotel Information</h4>
                        <hr />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @*<div class="form-group row mb-3">
                                @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-3 col-form-label" })
                                <div class="col-md-9">
                                    @Html.DisplayFor(model => model.HotelId, new { htmlAttributes = new { @class = "form-control"} })
                                </div>
                            </div>*@

                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3 col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-3 col-form-label" })
                            <div class="col-md-9 form-floating">
                                @Html.DropDownListFor(model => model.CategoryId, ViewBag.CategoryId as List<SelectListItem>, "--Select Category--", new { @class = "form-control", placeholder = "" })
                                <label For="CategoryId">Category</label>

                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-3 col-form-label" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            <div class="col-md-9 offset-md-3">
                                <button type="submit" class="btn btn-primary">Create</button>
                                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
